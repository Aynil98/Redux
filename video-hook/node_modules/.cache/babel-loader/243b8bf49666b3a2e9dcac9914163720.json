{"ast":null,"code":"//hook para buscar y hacer una lista de videos\n\n/*\r\nlo que queremos ahora es importar los hooks primitivos que necesitamos\r\n\r\ncambiamos el default de building por una variable de entrada para hacerlo mas personalizable\r\npodemos retornar:\r\n-     return [videos, search];\r\n-   return {videos, search}; o  un objeto\r\n\r\ncambiamos on onTermSubmit por search porque ahora es mas coherente\r\n*/\nimport { useState, useEffect } from 'react';\nimport youtube from '../apis/youtube';\n\nconst useVideos = defaultSearchTerm => {\n  const [videos, setVideos] = useState([]);\n  useEffect(() => {\n    search(defaultSearchTerm);\n  }, []);\n\n  const search = async term => {\n    const response = await youtube.get('/search', {\n      params: {\n        q: term,\n        part: 'snippet',\n        maxResults: 5,\n        type: 'video',\n        key: 'AIzaSyDVfeUxsJzp8Vs0xnFGlhC2zrllcqbC4zc'\n      }\n    });\n    setVideos(response.data.items);\n  };\n\n  return [videos, search];\n};\n\nexport default useVideos;","map":{"version":3,"sources":["C:/Users/alici/Desktop/cursoRedux/video-hook/src/hooks/useVideos.js"],"names":["useState","useEffect","youtube","useVideos","defaultSearchTerm","videos","setVideos","search","term","response","get","params","q","part","maxResults","type","key","data","items"],"mappings":"AAAA;;AACA;;;;;;;;;;AAWA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,OAAP,MAAoB,iBAApB;;AAEA,MAAMC,SAAS,GAAEC,iBAAD,IAAuB;AACnC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,MAAM,CAACH,iBAAD,CAAN;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMG,MAAM,GAAG,MAAOC,IAAP,IAAgB;AAC7B,UAAMC,QAAQ,GAAG,MAAMP,OAAO,CAACQ,GAAR,CAAY,SAAZ,EAAuB;AAC5CC,MAAAA,MAAM,EAAE;AACNC,QAAAA,CAAC,EAAEJ,IADG;AAENK,QAAAA,IAAI,EAAE,SAFA;AAGNC,QAAAA,UAAU,EAAE,CAHN;AAINC,QAAAA,IAAI,EAAE,OAJA;AAKNC,QAAAA,GAAG,EAAE;AALC;AADoC,KAAvB,CAAvB;AAUAV,IAAAA,SAAS,CAACG,QAAQ,CAACQ,IAAT,CAAcC,KAAf,CAAT;AAED,GAbD;;AAeA,SAAO,CAACb,MAAD,EAASE,MAAT,CAAP;AACH,CAvBD;;AAyBA,eAAeJ,SAAf","sourcesContent":["//hook para buscar y hacer una lista de videos\r\n/*\r\nlo que queremos ahora es importar los hooks primitivos que necesitamos\r\n\r\ncambiamos el default de building por una variable de entrada para hacerlo mas personalizable\r\npodemos retornar:\r\n-     return [videos, search];\r\n-   return {videos, search}; o  un objeto\r\n\r\ncambiamos on onTermSubmit por search porque ahora es mas coherente\r\n*/\r\n\r\nimport {useState, useEffect} from 'react';\r\nimport youtube from '../apis/youtube';\r\n\r\nconst useVideos=(defaultSearchTerm) => {\r\n    const [videos, setVideos] = useState([]);\r\n\r\n    useEffect(() => {\r\n      search(defaultSearchTerm);\r\n    }, []);\r\n\r\n    const search = async (term) => {\r\n      const response = await youtube.get('/search', {\r\n        params: {\r\n          q: term,\r\n          part: 'snippet',\r\n          maxResults: 5,\r\n          type: 'video',\r\n          key: 'AIzaSyDVfeUxsJzp8Vs0xnFGlhC2zrllcqbC4zc'\r\n        },\r\n      });\r\n\r\n      setVideos(response.data.items);\r\n\r\n    };\r\n\r\n    return [videos, search];\r\n};\r\n\r\nexport default useVideos;\r\n"]},"metadata":{},"sourceType":"module"}