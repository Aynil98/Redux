import React from 'react';
import ReactDOM from 'react-dom';
import SeasonDisplay from './SeasonDisplay';

//METODOS DE CICLO DE VIDA (hay otros menos frecuentes)
// componentDidMount(){
//   console.log('My component was rendered to teh screen');
// }
// componentDidUpdate(){
//   console.log('My component was just updated - it rerendered!');
// }
// componentWillUnmount() for cleanup
// React says we have to define render!!

class App extends React.Component {
  // for inicialitation esta reemplaza al constructor de react por ello necesitamos usar super referencia al contructor del padre
  // constructor(props){
  //   super(props);
  //   //THIS IS THE ONLY TIME we do direct assigment to this.state
  //   this.state = { lat: null, errorMessage:'' };
  // }

  state = {lat: null,  errorMessage:'' };

  componentDidMount(){
    window.navigator.geolocation.getCurrentPosition(
      //we called setstate para actializar la latitud
      position=> this.setState({ lat: position.coords.latitude}),
      // we did not!! this.state.lat = position.coords.latitude
      err=>this.setState({ errorMessage: err.message})
    );
  }

  render() {
    if (this.state.errorMessage && !this.state.lat){
      return <div>Error: {this.state.errorMessage}</div>;
    }

    if (!this.state.errorMessage && this.state.lat){
      return <div>Latitude: {this.state.lat}</div>;
    }

    return <div>Loading!</div>;
  }
}

ReactDOM.render(<App />, document.querySelector('#root'));
